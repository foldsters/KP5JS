package p5.kglsl
import p5.kglsl.*

fun <T: int, U: Int> KGLSL.ivec2(x: T, y: U): ivec2 = IVec2ExprImpl(int(x), int(y))
fun <T: int, U: Int> KGLSL.ivec2(x: U, y: T): ivec2 = IVec2ExprImpl(int(x), int(y))
fun <T: int, U: Int> KGLSL.ivec3(x: T, y: T, z: U): ivec3 = IVec3ExprImpl(int(x), int(y), int(z))
fun <T: int, U: Int> KGLSL.ivec3(x: T, y: U, z: T): ivec3 = IVec3ExprImpl(int(x), int(y), int(z))
fun <T: int, U: Int> KGLSL.ivec3(x: T, y: U, z: U): ivec3 = IVec3ExprImpl(int(x), int(y), int(z))
fun <T: int, U: Int> KGLSL.ivec3(x: U, y: T, z: T): ivec3 = IVec3ExprImpl(int(x), int(y), int(z))
fun <T: int, U: Int> KGLSL.ivec3(x: U, y: T, z: U): ivec3 = IVec3ExprImpl(int(x), int(y), int(z))
fun <T: int, U: Int> KGLSL.ivec3(x: U, y: U, z: T): ivec3 = IVec3ExprImpl(int(x), int(y), int(z))
fun <T: int, U: Int> KGLSL.ivec4(x: T, y: T, z: T, w: U): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: T, y: T, z: U, w: T): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: T, y: T, z: U, w: U): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: T, y: U, z: T, w: T): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: T, y: U, z: T, w: U): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: T, y: U, z: U, w: T): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: T, y: U, z: U, w: U): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: U, y: T, z: T, w: T): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: U, y: T, z: T, w: U): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: U, y: T, z: U, w: T): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: U, y: T, z: U, w: U): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: U, y: U, z: T, w: T): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: U, y: U, z: T, w: U): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))
fun <T: int, U: Int> KGLSL.ivec4(x: U, y: U, z: U, w: T): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))

fun KGLSL.ivec2(x: Int, y: Int): ivec2 = IVec2ExprImpl(int(x), int(y))
fun KGLSL.ivec3(x: Int, y: Int, z: Int): ivec3 = IVec3ExprImpl(int(x), int(y), int(z))
fun KGLSL.ivec4(x: Int, y: Int, z: Int, w: Int): ivec4 = IVec4ExprImpl(int(x), int(y), int(z), int(w))

fun KGLSL.ivec4(xy: ivec2,  z: Int, w: int): ivec4  = IVec4ExprImpl(xy.x, xy.y, int(z), int(w))
fun KGLSL.ivec4(xy: ivec2,  z: int,  w: Int): ivec4 = IVec4ExprImpl(xy.x, xy.y, int(z), int(w))
fun KGLSL.ivec4(xy: ivec2,  z: Int, w: Int): ivec4 = IVec4ExprImpl(xy.x, xy.y, int(z), int(w))
fun KGLSL.ivec4(x: int,  yz: ivec2,  w: Int): ivec4 = IVec4ExprImpl(int(x), yz.x, yz.y, int(w))
fun KGLSL.ivec4(x: Int, yz: ivec2,  w: int): ivec4  = IVec4ExprImpl(int(x), yz.x, yz.y, int(w))
fun KGLSL.ivec4(x: Int, yz: ivec2,  w: Int): ivec4 = IVec4ExprImpl(int(x), yz.x, yz.y, int(w))
fun KGLSL.ivec4(x: int,  y: Int, zw: ivec2): ivec4  = IVec4ExprImpl(int(x), int(y), zw.x, zw.y)
fun KGLSL.ivec4(x: Int, y: int,  zw: ivec2): ivec4  = IVec4ExprImpl(int(x), int(y), zw.x, zw.y)
fun KGLSL.ivec4(x: Int, y: Int, zw: ivec2): ivec4  = IVec4ExprImpl(int(x), int(y), zw.x, zw.y)

fun KGLSL.ivec4(xyz: ivec3, w: Int): ivec4 = IVec4ExprImpl(xyz.x, xyz.y, xyz.z, int(w))
fun KGLSL.ivec4(x: Int, yzw: ivec3): ivec4 = IVec4ExprImpl(int(x), yzw.x, yzw.y, yzw.z)

fun <T: float, U: Double> KGLSL.vec2(x: T, y: U): vec2 = Vec2ExprImpl(float(x), float(y))
fun <T: float, U: Double> KGLSL.vec2(x: U, y: T): vec2 = Vec2ExprImpl(float(x), float(y))
fun <T: float, U: Double> KGLSL.vec3(x: T, y: T, z: U): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Double> KGLSL.vec3(x: T, y: U, z: T): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Double> KGLSL.vec3(x: T, y: U, z: U): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Double> KGLSL.vec3(x: U, y: T, z: T): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Double> KGLSL.vec3(x: U, y: T, z: U): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Double> KGLSL.vec3(x: U, y: U, z: T): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Double> KGLSL.vec4(x: T, y: T, z: T, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: T, y: T, z: U, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: T, y: T, z: U, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: T, y: U, z: T, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: T, y: U, z: T, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: T, y: U, z: U, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: T, y: U, z: U, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: U, y: T, z: T, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: U, y: T, z: T, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: U, y: T, z: U, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: U, y: T, z: U, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: U, y: U, z: T, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: U, y: U, z: T, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Double> KGLSL.vec4(x: U, y: U, z: U, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))

fun KGLSL.vec2(x: Double, y: Double): vec2 = Vec2ExprImpl(float(x), float(y))
fun KGLSL.vec3(x: Double, y: Double, z: Double): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun KGLSL.vec4(x: Double, y: Double, z: Double, w: Double): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))

fun KGLSL.vec4(xy: vec2,  z: Double, w: float): vec4  = Vec4ExprImpl(xy.x, xy.y, float(z), float(w))
fun KGLSL.vec4(xy: vec2,  z: float,  w: Double): vec4 = Vec4ExprImpl(xy.x, xy.y, float(z), float(w))
fun KGLSL.vec4(xy: vec2,  z: Double, w: Double): vec4 = Vec4ExprImpl(xy.x, xy.y, float(z), float(w))
fun KGLSL.vec4(x: float,  yz: vec2,  w: Double): vec4 = Vec4ExprImpl(float(x), yz.x, yz.y, float(w))
fun KGLSL.vec4(x: Double, yz: vec2,  w: float): vec4  = Vec4ExprImpl(float(x), yz.x, yz.y, float(w))
fun KGLSL.vec4(x: Double, yz: vec2,  w: Double): vec4 = Vec4ExprImpl(float(x), yz.x, yz.y, float(w))
fun KGLSL.vec4(x: float,  y: Double, zw: vec2): vec4  = Vec4ExprImpl(float(x), float(y), zw.x, zw.y)
fun KGLSL.vec4(x: Double, y: float,  zw: vec2): vec4  = Vec4ExprImpl(float(x), float(y), zw.x, zw.y)
fun KGLSL.vec4(x: Double, y: Double, zw: vec2): vec4  = Vec4ExprImpl(float(x), float(y), zw.x, zw.y)

fun KGLSL.vec4(xyz: vec3, w: Double): vec4 = Vec4ExprImpl(xyz, float(w))
fun KGLSL.vec4(x: Double, yzw: vec3): vec4 = Vec4ExprImpl(float(x), yzw)

fun <T: float, U: Int> KGLSL.vec2(x: T, y: U): vec2 = Vec2ExprImpl(float(x), float(y))
fun <T: float, U: Int> KGLSL.vec2(x: U, y: T): vec2 = Vec2ExprImpl(float(x), float(y))
fun <T: float, U: Int> KGLSL.vec3(x: T, y: T, z: U): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Int> KGLSL.vec3(x: T, y: U, z: T): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Int> KGLSL.vec3(x: T, y: U, z: U): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Int> KGLSL.vec3(x: U, y: T, z: T): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Int> KGLSL.vec3(x: U, y: T, z: U): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Int> KGLSL.vec3(x: U, y: U, z: T): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun <T: float, U: Int> KGLSL.vec4(x: T, y: T, z: T, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: T, y: T, z: U, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: T, y: T, z: U, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: T, y: U, z: T, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: T, y: U, z: T, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: T, y: U, z: U, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: T, y: U, z: U, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: U, y: T, z: T, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: U, y: T, z: T, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: U, y: T, z: U, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: U, y: T, z: U, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: U, y: U, z: T, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: U, y: U, z: T, w: U): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))
fun <T: float, U: Int> KGLSL.vec4(x: U, y: U, z: U, w: T): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))

fun KGLSL.vec2(x: Int, y: Int): vec2 = Vec2ExprImpl(float(x), float(y))
fun KGLSL.vec3(x: Int, y: Int, z: Int): vec3 = Vec3ExprImpl(float(x), float(y), float(z))
fun KGLSL.vec4(x: Int, y: Int, z: Int, w: Int): vec4 = Vec4ExprImpl(float(x), float(y), float(z), float(w))

fun KGLSL.vec4(xy: vec2,  z: Int, w: float): vec4  = Vec4ExprImpl(xy.x, xy.y, float(z), float(w))
fun KGLSL.vec4(xy: vec2,  z: float,  w: Int): vec4 = Vec4ExprImpl(xy.x, xy.y, float(z), float(w))
fun KGLSL.vec4(xy: vec2,  z: Int, w: Int): vec4 = Vec4ExprImpl(xy.x, xy.y, float(z), float(w))
fun KGLSL.vec4(x: float,  yz: vec2,  w: Int): vec4 = Vec4ExprImpl(float(x), yz.x, yz.y, float(w))
fun KGLSL.vec4(x: Int, yz: vec2,  w: float): vec4  = Vec4ExprImpl(float(x), yz.x, yz.y, float(w))
fun KGLSL.vec4(x: Int, yz: vec2,  w: Int): vec4 = Vec4ExprImpl(float(x), yz.x, yz.y, float(w))
fun KGLSL.vec4(x: float,  y: Int, zw: vec2): vec4  = Vec4ExprImpl(float(x), float(y), zw.x, zw.y)
fun KGLSL.vec4(x: Int, y: float,  zw: vec2): vec4  = Vec4ExprImpl(float(x), float(y), zw.x, zw.y)
fun KGLSL.vec4(x: Int, y: Int, zw: vec2): vec4  = Vec4ExprImpl(float(x), float(y), zw.x, zw.y)

fun KGLSL.vec4(xyz: vec3, w: Int): vec4 = Vec4ExprImpl(xyz.x, xyz.y, xyz.z, float(w))
fun KGLSL.vec4(x: Int, yzw: vec3): vec4 = Vec4ExprImpl(float(x), yzw.x, yzw.y, yzw.z)


